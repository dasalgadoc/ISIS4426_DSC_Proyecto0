""" Controller's module for events app """
# Django

from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect
from django.core.exceptions import ObjectDoesNotExist

# Models

from .models import Event

# Test


@login_required
def list_events(request):
    """ Get the event's list generated by loged user """
    events = Event.objects.filter(event_creator=request.user).order_by('-event_create_date')
    context = {
        'events': events
    }
    print(context)
    return render(request, 'events/myevents.html', context = context)


@login_required
def create_event(request):
    """ Allow to create new events """
    return render(request, 'events/create.html', context = context)


@login_required
def edit_event(request):
    """ Edit information for event """
    if request.method == 'GET':
        print(request.GET)
    return render(request, 'events/edit.html')


@login_required
def delete_event(request):
    """ Delete an event from database """
    if request.method == 'GET':
        try:
            event = Event.objects.get(pk = request.GET['event'], event_creator = request.user)
            error = None
        except ObjectDoesNotExist:
            event = None
            error = 'Evento no encontrado, por favor reintente'
            
        context = {
            'event': event,
            'error': error
        }
    else:
        try:
            event = Event.objects.get(pk = request.POST['pk'], event_creator = request.user)
            event.delete()
            return redirect('events:myevents')
        except:
            context = {
                'error': 'No fue posible eliminar el registro, por favor reintente'
            }
    return render(request, 'events/delete.html', context = context)